<section class="bg-teal-gradient py-80">
	<div class="container">
		<div class="row">
			<div class="col-xs-12 hero-image text-xs-center">
				<h1 class="pb-2">
					<%= __('index.main_title') %>
					<br>
					<%= __('index.sub_title') %>
				</h1>
				<h4 class="pb-2 text-white-dark">
					<%= __('index.abstract_title') %>
					<br>
					<%= __('index.abstract_sub_title') %>
				</h4>
				<a href="https://pan.baidu.com/s/1eRZrtuy"
					target="_blank"
					class="btn btn-white-outline btn-lg">
					<%= __('index.download') %>
				</a>
			</div>
		</div>
	</div>
</section>
<section class="py-80">
	<div class="container text-xs-center pb-3">
		<h2 class="pb-1">
			<%= __('index.intro_title') %>
		</h2>
		<h4 class="pb-2 text-muted">
			<%= __('index.intro_sub_title') %>
		</h4>
		<div class="row pb-1">
			<div class="col-md-6 col-sm-8 offset-md-3 offset-sm-2">
				<img src="/images/eg.png" alt="" class="img-fluid">
			</div>
		</div>
		<div class="row pt-2">
			<a href="http://www.bilibili.com/mobile/video/av6449358.html?from=message"
				target="_blank"
				class="btn btn-teal btn-lg mr-3">
				<%= __('index.intro_btn_video') %>
			</a>
			<a href="https://pan.baidu.com/s/1eRYBodG"
				target="_blank"
				class="btn btn-teal-outline btn-lg">
				<%= __('index.intro_btn_manual') %>
			</a>
		</div>
	</div>
</section>
<section class="bg-teal-gradient py-3">
	<div class="container">
		<div class="row">
			<div class="col-md-6 pt-3">
				<h2 class="pb-1">
					<%= __('index.get_started') %>
				</h2>
				<h5 class="text-white-dark pb-1">
					<%= __('index.get_started_detail') %>
				</h5>
				<div class="pt-1">
					<a href="http://www.bilibili.com/mobile/video/av6449358.html?from=message"
						target="_blank"
						class="btn pull-left btn-lg btn-white-outline">
						<%= __('index.get_started_btn_video') %>
					</a>
				</div>
			</div>
			<div class="col-md-6 text-xs-center">
				<img src="/images/icon-04.png" alt="" class="img-fluid">
			</div>
		</div>
	</div>
</section>
<section class="py-80">
	<div class="container text-xs-center">
		<h2>
			<%= __('index.feature_title') %>
		</h2>
		<div class="row">
			<div class="col-md-4">
				<img class="img-fluid px-2" src="/images/icon-02.png" alt="">
				<h3>
					<%= __('index.feature_GUI_title') %>
				</h3>
				<p class="text-muted">
					<%= __('index.feature_GUI_detail') %>
				</p>
			</div>
			<div class="col-md-4">
				<img class="img-fluid px-2" src="/images/icon-03.png" alt="">
				<h3>
					<%= __('index.feature_integration_title') %>
				</h3>
				<p class="text-muted">
					<%= __('index.feature_integration_detail') %>
				</p>
			</div>
			<div class="col-md-4">
				<img class="img-fluid px-2" src="/images/icon-01.png" alt="">
				<h3>
					<%= __('index.feature_report_title') %>
				</h3>
				<p class="text-muted">
					<%= __('index.feature_report_detail') %>
				</p>
			</div>
		</div>
	</div>
</section>
<section class="bg-teal-gradient py-3" id="lang">
	<div class="container">
		<div class="row">
			<div class="col-md-8">
				<ul class="nav nav-pills" role="tablist">
					<li class="nav-item">
						<a href="#lc2" class="nav-link active" data-toggle="tab" role="tab">LemonCase2</a>
					</li>
					<li class="nav-item">
						<a href="#selenium" class="nav-link" data-toggle="tab" role="tab">Selenium</a>
					</li>
				</ul>
				<div class="tab-content">
					<div class="tab-pane active" id="lc2" role="tabpanel">
						<pre class="sublemon">
#TIMES 1

process main () {
	username = 'user@email.com';
	authkey = '12345';

	input '#name' by username;
	input '#password' by authkey;
}
						</pre>
					</div>
					<div class="tab-pane" id="selenium" role="tabpanel">
						<pre class="sublemon">
import java.net.URL;

import org.openqa.selenium.By;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.JsonNode;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import junit.framework.Assert;


class LoginFormTest {

  static String username = "user%40email.com"; // Your username
  static String authkey = "12345";  // Your authkey
  String testScore = "unset";

  public static void main(String[] args) throws Exception {
    LoginFormTest myTest = new LoginFormTest();

    DesiredCapabilities caps = new DesiredCapabilities();

    caps.setCapability("name", "Login Form Example");
    caps.setCapability("build", "1.0");
    caps.setCapability("browser_api_name", "Chrome53");
    caps.setCapability("os_api_name", "Win10");
    caps.setCapability("screen_resolution", "1024x768");
    caps.setCapability("record_video", "true");
    caps.setCapability("record_network", "true");


    
    RemoteWebDriver driver = new RemoteWebDriver(new URL(
      "http://" + username + ":" +
        authkey +"@hub.crossbrowsertesting.com:80/wd/hub"), caps);
    System.out.println(driver.getSessionId());

    // we wrap the test in a try catch loop so we can log assert
    // failures in our system
    try {

      // load the page url
      System.out.println("Loading Url");
      driver.get("http://crossbrowsertesting.github.io/login-form.html");
      
      // maximize the window - DESKTOPS ONLY
      //System.out.println("Maximizing window");
      //driver.manage().window().maximize();
      
      // complete a short login form
      // first by entering the username
      System.out.println("Entering username");
      driver.findElementByName("username")
        .sendKeys("tester@crossbrowsertesting.com");
      
      // then by entering the password
      System.out.println("Entering password");
      driver.findElementByName("password").sendKeys("test123");
      
      // then by clicking the login button
      System.out.println("Logging in");
      driver.findElementByCssSelector("div.form-actions > button").click();
      
      // let's wait here to ensure the page has loaded completely
      WebDriverWait wait = new WebDriverWait(driver, 10);
      wait.until(ExpectedConditions
        .visibilityOfElementLocated(By.xpath("//*[@id=\"logged-in-message\"]/h2")));
      
      // Let's assert that the welcome message is present on the page. 
      // if not, an exception will be raised and we'll set the score
      // to fail in the catch block.
      String welcomeMessage = driver
        .findElementByXPath("//*[@id=\"logged-in-message\"]/h2").getText();
      Assert.assertEquals("Welcome tester@crossbrowsertesting.com", welcomeMessage);
      
      // if we get to this point, then all the assertions have passed
      // that means that we can set the score to pass in our system
      myTest.testScore = "pass"; 
    }
    catch(AssertionError ae) {

      // if we have an assertion error, take a snapshot of where the test fails
      // and set the score to "fail"
      String snapshotHash = myTest.takeSnapshot(driver.getSessionId().toString());
      myTest.setDescription(
        driver.getSessionId().toString(), snapshotHash, ae.toString()
      );
      myTest.testScore = "fail";
    } 
    finally {

      System.out.println("Test complete: " + myTest.testScore);

      // here we make an api call to actually send the score 
      myTest.setScore(driver.getSessionId().toString(), myTest.testScore);
      
      // and quit the driver
      driver.quit();
    }
  }

  public JsonNode setScore(String seleniumTestId, String score)
    throws UnirestException {
    // Mark a Selenium test as Pass/Fail
    HttpResponse response = Unirest.put("http://crossbrowsertesting.com/api/v3" +
      "/selenium/{seleniumTestId}")
        .basicAuth(username, authkey)
        .routeParam("seleniumTestId", seleniumTestId)
        .field("action","set_score")
        .field("score", score)
        .asJson();
    return response.getBody();
  }

  public String takeSnapshot(String seleniumTestId) throws UnirestException {
    /*
     * Takes a snapshot of the screen for the specified test.
     * The output of this function can be used as a parameter for setDescription()
     */
    HttpResponse response = Unirest.post("http://crossbrowsertesting.com/api/v3" +
      "/selenium/{seleniumTestId}/snapshots")
        .basicAuth(username, authkey)
        .routeParam("seleniumTestId", seleniumTestId)
        .asJson(); 
    // grab out the snapshot "hash" from the response
    String snapshotHash = (String) response.getBody().getObject().get("hash");
    
    return snapshotHash;
  }
  
  public JsonNode setDescription(
    String seleniumTestId, String snapshotHash, String description
  ) throws UnirestException{
    /* 
     * sets the description for the given seleniemTestId and snapshotHash
     */
    HttpResponse response =
      Unirest.put("http://crossbrowsertesting.com/api/v3" +
        "/selenium/{seleniumTestId}/snapshots/{snapshotHash}")
          .basicAuth(username, authkey)
          .routeParam("seleniumTestId", seleniumTestId)
          .routeParam("snapshotHash", snapshotHash)
          .field("description", description)
          .asJson();
    return response.getBody();
  }
}
						</pre>
					</div>
				</div>
			</div>
			<div class="col-md-4 pt-3">
				<h2>
					<%= __('index.script_title') %>
				</h2>
				<p class="py-1">
					<%= __('index.script_detail') %>
				</p>
				<div>
					<a href="/syntax" class="btn pull-left btn-lg btn-white-outline">
						<%= __('index.script_btn_manual') %>
					</a>
				</div>
			</div>
		</div>
	</div>
</section>
<section class="py-3">
	<div class="container">
		<h2 class="text-xs-center py-2">
			<%= __('index.customer_title') %>
		</h2>
		<div class="row border-grey px-2 py-2">
			<div class="col-md-3">
				<div class="mx-auto text-xs-center">
					<img src="/images/relink.jpg" alt="" class="img-fluid">
					<br>
					<span>relink</span>
				</div>
			</div>
			<div class="col-md-9">
				<blockquote class="blockquote">
					<p>
						<%= __('index.customer_quote') %>
					</p>
					<footer class="blockquote-footer text-xs-right">
						<cite class="lead mr-1">
							<%= __('index.customer_name') %>
						</cite>
						relink | <%= __('index.customer_position') %>
					</footer>
				</blockquote>
			</div>
		</div>
	</div>
</section>
